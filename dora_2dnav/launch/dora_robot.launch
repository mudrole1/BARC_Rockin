<launch>

  <!-- RosAria -->  
  <!-- run RosAria pioneer drivers -->
    <node pkg="rosaria" type="RosAria" name="RosAria" >
<remap from="/RosAria/cmd_vel" to="/cmd_vel" />
<remap from="/RosAria/pose" to="odom" />
</node>


  <!-- tf transform -->
  <!-- approximative measures -->
  <!-- args ="x y z qx qy qz frame_id child_frame_id period_in_ms" -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.13 0 0.22 0 0 0 base_link base_laser 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_base_sonar" args="0.13 0 0.15 0 0 0 base_link sonar_frame 100" />
  

  <!-- hokuyo_node -->  
  <!-- laser scaner drivers -->
  <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
    <param name="frame_id" type="string" value="base_laser"/>
  
    <!-- calibration step is necessary to produce accurate time stamps on scans --> 
    <param name="calibrate_time" type="bool" value="true"/> 
    
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/ttyACM0"/> 
  
    <param name="intensity" type="bool" value="false"/>
  </node>

     
   <!-- gmapping -->
  <!-- SLAM algorithm -->    
  <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" respawn="true" output="screen">
    <param name="scan" type="string" value="/scan"/> 
    <param name="_odom_frame" type="string" value="odom"/>
  </node>

<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find dora_2dnav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find dora_2dnav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find dora_2dnav)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find dora_2dnav)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find dora_2dnav)/config/base_local_planner_params.yaml" command="load" />
  </node>

</launch>
