#This file contains common configuration options for the two costmaps used in the navigation stack for more details on the parameters in this file, and a full list of the parameters used by the costmaps, please see http://www.ros.org/wiki/costmap_2d

#Set map type
map_type: costmap #"voxel" or "costmap", with the difference between them being a 3D vs 2D f I've decided to track unknown space with a robot, mostly these are robots that are using the voxel_grid model for the costmap, I make sure to look at the unknown space visualization to see that unknown space is being cleared out in a reasonable way.

#Set the tolerance we're willing to have for tf transforms I typically use tf_monitor to look at the delay for the system and set the parameter conservatively off of that. Also, if the delay reported by tf_monitor is sufficiently large, I might poke around a bit to see what's causing the latency
#transform_tolerance: 0.2

#Obstacle marking parameters
obstacle_range: 4 #maximum range sensor reading that will result in an obstacle being put into the costma(meters)
raytrace_range: 4 #range in meters at which to raytrace out obstacles from the map using sensor data. This can be over-ridden on a per-sensor basis.

#The footprint of the robot 
footprint: [ [0.200, -0.0508], [0.1778, -0.0508], [0.1778, -0.1778], [-0.1905, -0.1778], [-0.254, 0], [-0.1905, 0.1778], [0.1778, 0.1778], [0.1778, 0.0508], [0.200, 0.0508] ]

#Inscribed and circumscribed radius 
#inscribed_radius: 0.2
#circumscribed_radius: 0.3

#Cost function parameters
inflation_radius: 0.35
#cost_scaling_factor: 10.0

#The cost at which a cell is considered an obstacle when a map is read from the map_server
#lethal_cost_threshold: 100

#Configuration for the sensors/topics that the costmap will use to update a map
observation_sources: scan #kinect

scan: {sensor frame: base_laser, data_type: LaserScan, topic: scan, expected_update_rate: 0.15, marking: true, clearing: true}

#kinect: {sensor frame: camera_link, data_type: PointCloud2, topic:  /voxel_grid/output , observation_persistence: 0.0, marking: true, clearing: true, min_obstacle_height: 0.05, max_obstacle_height: 1.0}
